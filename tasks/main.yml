---

# Setup this role by prompting the user to enter required details

- name: Prompt for database root user password
  pause:
    prompt: "Database Root User Password"
    echo: yes
  register: input1

- name: Set database_name fact
  set_fact:
    mysql_root_password: "{{ input1.user_input }}"

- name: Prompt for db user scribe password
  pause:
    prompt: "Database User 'scribe' Password"
    echo: yes
  register: input2

- name: Set database_name fact
  set_fact:
    db_user_scribe_password: "{{ input2.user_input }}"

# Step 1: Create MySQL Database
- name: Create 'wordpress' MySQL database
  mysql_db:
    name: wordpress
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  become: yes
 
# Step 2: Create MySQL user account 'wpscribe' with full access to 'wordpress' db
- name: Create 'wpscribe' user with all database privileges on 'wordpress' db
  mysql_user:
    name: wpscribe
    password: "{{ db_user_scribe_password }}"  # You should keep this in a secret or vault.
    priv: "wordpress.*:ALL"
    host: "%"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: present
  become: yes

# Step 3: Checkout the latest version of WordPress and place it in /var/www/wordpress
#- name: Ensure wget is present (to download WordPress)
#  apt:
#    name: wget
#    state: present
#  become: yes
#
#- name: Download the latest WordPress tarball
#  get_url:
#    url: "https://wordpress.org/latest.tar.gz"
#    dest: "/tmp/wordpress-latest.tar.gz"
#    timeout: 600
#
#- name: Unarchive WordPress tarball to the target directory
#  unarchive:
#    src: "/tmp/wordpress-latest.tar.gz"
#    dest: "/var/www/"
#    remote_src: yes
#    creates: "/var/www/wordpress/wp-config-sample.php"  # This ensures the task is idempotent.
#  become: yes
#
## Optional: You might want to set the proper permissions on the WordPress directory
#- name: Set proper permissions for WordPress directory
#  file:
#    path: "/var/www/wordpress"
#    state: directory
#    owner: www-data
#    group: www-data
#    recurse: yes
#  become: yes
#
#- name: Add WordPress info site configuration
#  copy:
#    src: wordpress.conf
#    dest: /etc/nginx/sites-available/
#    mode: '0644'
#
#- name: Enable WP install site
#  file:
#    src: /etc/nginx/sites-available/wordpress.conf
#    dest: /etc/nginx/sites-enabled/default
#    state: link
#
#- name: Restart nginx and php-fpm to apply changes
#  service:
#    name: "{{ item }}"
#    state: restarted
#  loop:
#    - nginx
#    - php8.1-fpm
#
